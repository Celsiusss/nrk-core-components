{"version":3,"file":"index.js","sources":["../../packages/utils.js","../../packages/core-toggle/core-toggle.js","../../packages/core-toggle/core-toggle.jsx","../../packages/core-dropdown/core-dropdown.js","../../packages/core-dropdown/core-dropdown.jsx","../../packages/core-datepicker/core-datepicker.jsx","../../packages/core-input/core-input.jsx"],"sourcesContent":["/**\n* assign\n* @param {Object} target The target object\n* @param {Object} sources The source object(s)\n* @return {Object} The target object\n*/\nexport function assign (target, ...sources) {\n  sources.filter(Boolean).forEach((source) => {\n    Object.keys(source).forEach((key) => (target[key] = source[key]))\n  })\n  return target\n}\n\n/**\n* addEvent\n* @param {String} uuid An unique ID of the event to bind - ensurnes single instance\n* @param {String} type The type of event to bind\n* @param {Function} handler The function to call on event\n*/\nexport function addEvent (uuid, type, handler) {\n  if (typeof window === 'undefined' || window[`${uuid}-${type}`]) return      // Ensure single instance\n  document.addEventListener(type, handler, window[`${uuid}-${type}`] = true)  // Use capture for old Firefox\n}\n\n/**\n* attr\n* @param {Element} element HTMLElement to change attributes on\n* @param {String|Object} name A name of an attribute or object of attributes to set or remove\n* @param {Mixed} [value] An optional value to set (use null to remove). If not specified - retuns value\n* @return {Element|String} element\n*/\nexport function attr (element, name, value) {\n  if (arguments.length === 3) element[value === null ? 'removeAttribute' : 'setAttribute'](name, value)\n  else if (typeof name === 'string') return element.getAttribute(name)\n  else Object.keys(value).forEach((n) => attr(element, name, value[n]))\n  return element\n}\n\n/**\n* CustomEvent\n* See {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n* @param {String} eventName A case-sensitive string representing the event type to create\n* @param {Object} params.detail Any data passed when initializing the event\n* @param {Boolean} params.cancelable A Boolean indicating whether the event is cancelable.\n* @param {Boolean} params.bubbles A Boolean indicating whether the event bubbles up through the DOM or not.\n* @return {CustomEvent} Creates a CustomEvent.\n*/\nexport const CustomEvent = (() => {\n  if (typeof window === 'undefined') return\n  if (typeof window.CustomEvent === 'function') return window.CustomEvent\n\n  function CustomEvent (name, params = {}) {\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(name, Boolean(params.bubbles), Boolean(params.cancelable), params.detail)\n    return event\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n  return CustomEvent\n})()\n\n/**\n* debounce\n* @param {Function} callback The function to debounce\n* @param {Number} ms The number of milliseconds to delay\n* @return {Function} The new debounced function\n*/\nexport function debounce (callback, ms) {\n  let timer\n  return function (...args) {\n    const self = this\n    clearTimeout(timer)\n    timer = setTimeout(() => callback.apply(self, args), ms)\n  }\n}\n\n/**\n* dispatchEvent\n* @param {Element} elem The target object\n* @param {String} name The source object(s)\n* @param {Object} detail Detail object (bubbles and cancelable defaults to true)\n* @return {Boolean} Whether the event was cance\n*/\nexport function dispatchEvent (elem, name, detail = {}) {\n  return elem.dispatchEvent(new CustomEvent(name, {detail, bubbles: true, cancelable: true}))\n}\n\n/**\n* escapeHTML\n* @param {String} str A string with potential html tokens\n* @return {String} Escaped HTML string according to OWASP recommendation\n*/\nconst ESCAPE_HTML_MAP = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '/': '&#x2F;', '\\'': '&#x27;'}\nexport function escapeHTML (str) {\n  return String(str || '').replace(/[&<>\"'/]/g, (char) => ESCAPE_HTML_MAP[char])\n}\n\n/**\n* getUUID\n* @return {String} A generated unique ID\n*/\nexport function getUUID (el, attr) {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2, 5)\n}\n\n/**\n* queryAll\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @return {Array} Array of elements\n*/\nexport function queryAll (elements, context = document) {\n  if (typeof elements === 'string') return queryAll(context.querySelectorAll(elements))\n  if (elements.length) return [].slice.call(elements)\n  return elements.nodeType ? [elements] : []\n}\n\n/**\n* queryAll\n* @param {Element} [context] A element to find focusable elements within\n* @return {Array} Array of focusable elements\n*/\nexport function queryFocusable (context = document) {\n  return queryAll(`\n    a,\n    button,\n    input,\n    select,\n    textarea,\n    iframe,\n    [tabindex]\n    [contenteditable=\"true\"]\n  `, context).filter((el) => !el.disabled)\n}\n","import {version} from './package.json'\nimport {addEvent, dispatchEvent, getUUID, queryAll} from '../utils'\n\ntoggle.UUID = `data-toggle-${version.replace(/\\D/g, '-')}`\n\n/**\n* toggle\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @param {Boolean} [open] Optional. True will open, false will close, undefined just updates attribute\n* @return {Array} Array of elements\n*/\nexport default function toggle (elements, open = null) {\n  return queryAll(elements).map((master) => {\n    const prevOpen = master.getAttribute('aria-expanded') === 'true'\n    const wantOpen = open === null ? prevOpen : Boolean(open)\n    const nextOpen = (prevOpen !== wantOpen && dispatchEvent(master, 'toggle')) ? wantOpen : prevOpen\n    const slave = master.nextElementSibling\n\n    master.setAttribute(toggle.UUID, '')\n    master.setAttribute('aria-expanded', nextOpen)\n    master.setAttribute('aria-controls', slave.id = slave.id || getUUID())\n    slave.setAttribute('aria-labelledby', master.id = master.id || getUUID())\n    slave[nextOpen ? 'removeAttribute' : 'setAttribute']('hidden', '')\n\n    return master\n  })\n}\n\naddEvent(toggle.UUID, 'click', (event) => {\n  queryAll(`[${toggle.UUID}]`).forEach((el) => {\n    const open = el.getAttribute('aria-expanded') === 'true'\n    const pops = el.getAttribute('aria-haspopup') === 'true'\n\n    if (el.contains(event.target)) toggle(el, !open)\n    else if (pops && open && dispatchEvent(el, 'toggle.outside')) toggle(el, false)\n  })\n})\n","import React from 'react'\nimport toggle from './core-toggle'\nimport {assign} from '../utils'\n\nexport default class Toggle extends React.Component {\n  shouldComponentUpdate ({open}) {\n    return this.props.open !== open // Only re-render if new open prop (also helps Preact)\n  }\n  render () {\n    return (<div>\n      <button {...assign({}, this.props, {\n        'aria-expanded': this.props.open,\n        children: this.props.label,\n        ref: (el) => setTimeout(() => toggle(el), 16), // Temporary workaround for preact\n        label: null\n      })} />\n      <div hidden={this.props.open}>\n        {this.props.children}\n      </div>\n    </div>)\n  }\n}\n","import toggle from '../core-toggle/core-toggle'\nimport {attr, addEvent, queryFocusable} from '../utils'\n\nconst KEYS = {ESC: 27, PAGEUP: 33, PAGEDOWN: 34, END: 35, HOME: 36, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40}\n\nexport default function dropdown (elements, open) {\n  return toggle(elements, open).map((el) => attr(el, 'aria-haspopup', 'true'))\n}\n\naddEvent(toggle.UUID, 'keydown', (event) => {\n  if (event.ctrlKey || event.altKey || event.metaKey) return                          // Let browser do it's thing\n  for (let el = event.target; el; el = el.parentElement) {                            // Bubble up the DOM tree\n    const master = document.getElementById(el.getAttribute('aria-labelledby')) || el  // getElementById is performat enough\n    const popup = master.hasAttribute(toggle.UUID) && master.getAttribute('aria-haspopup') === 'true'\n    if (popup) return onKey(event, master, master.nextElementSibling)\n  }\n})\n\nfunction onKey (event, master, slave) {\n  const focusable = queryFocusable(slave)\n  const index = focusable.indexOf(document.activeElement)\n  let focus\n\n  if (event.keyCode === KEYS.ESC) focus = master\n  else if (event.keyCode === KEYS.UP) focus = focusable[index - 1] || focusable.pop()\n  else if (event.keyCode === KEYS.DOWN) focus = focusable[index + 1] || focusable[0]\n  else if (event.keyCode === KEYS.HOME || event.keyCode === KEYS.PAGEUP) focus = focusable[0]\n  else if (event.keyCode === KEYS.END || event.keyCode === KEYS.END) focus = focusable.pop()\n  else focus = focusable.filter((el) => el.textContent.toLowerCase()[0] === event.key)[0]\n\n  if (focus) {\n    event.preventDefault()\n    toggle(master, focus !== master)\n    focus.focus()\n  }\n}\n","import React from 'react'\nimport toggle from './core-dropdown'\nimport {assign} from '../utils'\n\nexport default class Toggle extends React.Component {\n  // shouldComponentUpdate ({open}) {\n  //   return this.props.open !== open // Only re-render if new open prop (also helps Preact)\n  // }\n  render () {\n    return (<div>\n      <button {...assign({}, this.props, {\n        'aria-expanded': this.props.open,\n        children: this.props.label,\n        ref: toggle,\n        label: null\n      })} />\n      <ul hidden={this.props.open}>\n        {this.props.children}\n      </ul>\n    </div>)\n  }\n}\n","export default function Datepicker () {}\n","import React from 'react'\n\nexport default function Input () {\n  return <div>Testing input</div>\n}\n"],"names":["assign","target","sources","filter","Boolean","forEach","source","Object","keys","key","addEvent","uuid","type","handler","window","document","addEventListener","CustomEvent","prototype","Event","name","params","const","event","createEvent","initCustomEvent","bubbles","cancelable","detail","dispatchEvent","elem","getUUID","el","attr","Date","now","toString","Math","random","slice","queryAll","elements","context","querySelectorAll","length","call","nodeType","toggle","open","map","master","prevOpen","getAttribute","wantOpen","nextOpen","slave","nextElementSibling","setAttribute","UUID","id","replace","pops","contains","Toggle","shouldComponentUpdate","ref","this","props","render","React","aria-expanded","children","label","setTimeout","hidden","Component","KEYS","ESC","PAGEUP","PAGEDOWN","END","HOME","LEFT","UP","RIGHT","DOWN","dropdown","element","value","arguments","n","onKey","focus","focusable","disabled","index","indexOf","activeElement","keyCode","pop","textContent","toLowerCase","preventDefault","ctrlKey","altKey","metaKey","let","parentElement","getElementById","hasAttribute"],"mappings":"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"}