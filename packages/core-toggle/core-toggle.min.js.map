{"version":3,"file":"core-toggle.min.js","sources":["../utils.js","core-toggle.js"],"sourcesContent":["/**\n* addElements\n* @param {String} key\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @return {Array} Array of elements\n*/\nexport function addElements (key, elements) {\n  if (typeof elements === 'string') return addElements(key, document.querySelectorAll(elements))\n  if (elements.length) return [].map.call(elements, (el) => (el[key] = 1) && el)\n  if (elements.nodeType) return (elements[key] = 1) && [elements]\n  return []\n}\n\n/**\n* addEvent\n* @param {String} key A namespace to ensure no double binding and only triggering on registered elements\n* @param {String} eventName A case-sensitive string representing the event type to listen for\n* @param {Function} listener The function which receives a notification\n*/\nexport function addEvent (key, eventName, listener) {\n  if (typeof window === 'undefined') return\n\n  // Store on window to make sure multiple instances is merged\n  const namespace = window[key] = window[key] || {}\n  const isUnbound = !namespace[eventName] && (namespace[eventName] = 1)\n\n  if (isUnbound) {\n    document.addEventListener(eventName, function (event) {\n      for (let el = event.target; el; el = el.parentElement) {\n        if (el[key]) listener(el, event)\n      }\n    }, true) // Use capture to make sure focus/blur bubbles in old Firefox\n  }\n}\n\n/**\n* assign\n* @param {Object} target The target object\n* @param {Object} sources The source object(s)\n* @return {Object} The target object\n*/\nexport function assign (target, ...sources) {\n  sources.filter(Boolean).forEach((source) => {\n    Object.keys(source).forEach((key) => (target[key] = source[key]))\n  })\n  return target\n}\n\n/**\n* CustomEvent\n* See {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n* @param {String} eventName A case-sensitive string representing the event type to create\n* @param {Object} params.detail Any data passed when initializing the event\n* @param {Boolean} params.cancelable A Boolean indicating whether the event is cancelable.\n* @param {Boolean} params.bubbles A Boolean indicating whether the event bubbles up through the DOM or not.\n* @return {CustomEvent} Creates a CustomEvent.\n*/\nexport const CustomEvent = (() => {\n  if (typeof window === 'undefined') return\n  if (window.CustomEvent) return window.CustomEvent\n\n  function CustomEvent (event, params = {}) {\n    const evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, Boolean(params.bubbles), Boolean(params.cancelable), params.detail)\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n  return CustomEvent\n})()\n\n/**\n* debounce\n* @param {Function} callback The function to debounce\n* @param {Number} ms The number of milliseconds to delay\n* @return {Function} The new debounced function\n*/\nexport function debounce (callback, ms) {\n  let timer\n  return function (...args) {\n    const self = this\n    clearTimeout(timer)\n    timer = setTimeout(() => callback.apply(self, args), ms)\n  }\n}\n\n/**\n* escapeHTML\n* @param {String} str A string with potential html tokens\n* @return {String} Escaped HTML string according to OWASP recommendation\n*/\nconst ESCAPE_HTML_MAP = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '/': '&#x2F;', '\\'': '&#x27;'}\nexport function escapeHTML (str) {\n  return String(str || '').replace(/[&<>\"'/]/g, (char) => ESCAPE_HTML_MAP[char])\n}\n","import {name, version} from './package.json'\nimport {addElements, addEvent, CustomEvent} from '../utils'\n\nconst KEY = `${name}-${version}`                    // Unique id of component\nconst ATTR = 'aria-expanded'\n\n/**\n* toggle\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @param {Boolean} [open] Optional open argument. True will open, false will close\n* @return {Array} Array of elements\n*/\nexport function toggle (elements, open) {\n  const action = typeof open\n\n  return addElements(KEY, elements).map((el, index) => {\n    const prevState = el.getAttribute(ATTR) === 'true'\n    const nextState = action === 'undefined' ? prevState : Boolean(action === 'function' ? open(el, index) : open)\n    const canUpdate = prevState === nextState || el.dispatchEvent(new CustomEvent('toggle', {\n      bubbles: true,\n      cancelable: true,\n      detail: nextState\n    }))\n\n    if (canUpdate) el.setAttribute(ATTR, Boolean(open))\n    return el\n  })\n}\n\naddEvent(KEY, 'click', (el) => {\n  toggle(el, el.getAttribute(ATTR) !== 'true')\n})\n"],"names":["CustomEvent","window","prototype","Event","event","params","const","evt","document","createEvent","initCustomEvent","Boolean","bubbles","cancelable","detail","KEY","name","ATTR","toggle","elements","open","action","addElements","key","querySelectorAll","length","map","call","el","nodeType","index","prevState","getAttribute","nextState","dispatchEvent","setAttribute","eventName","listener","namespace","addEventListener","let","target","parentElement","addEvent"],"mappings":"yLAyDA,IAAaA,EAAc,WACzB,GAAsB,oBAAXC,OACX,OAAIA,OAAOD,YAAoBC,OAAOD,aAQtCA,EAAYE,UAAYD,OAAOE,MAAMD,UAC9BF,GAPP,SAASA,EAAaI,EAAOC,sBAC3BC,IAAMC,EAAMC,SAASC,YAAY,eAEjC,OADAF,EAAIG,gBAAgBN,EAAOO,QAAQN,EAAOO,SAAUD,QAAQN,EAAOQ,YAAaR,EAAOS,QAChFP,GAPgB,GCtDrBQ,EAAMC,yBACNC,EAAO,gBAQb,SAAgBC,EAAQC,EAAUC,GAChCd,IAAMe,SAAgBD,EAEtB,ODTF,SAAgBE,EAAaC,EAAKJ,GAChC,MAAwB,iBAAbA,EAA8BG,EAAYC,EAAKf,SAASgB,iBAAiBL,IAChFA,EAASM,UAAkBC,IAAIC,KAAKR,WAAWS,UAAQA,EAAGL,GAAO,IAAMK,IACvET,EAASU,UAAkBV,EAASI,GAAO,KAAOJ,MCM/CG,CAAYP,EAAKI,GAAUO,aAAKE,EAAIE,GACzCxB,IAAMyB,EAAsC,SAA1BH,EAAGI,aAAaf,GAC5BgB,EAAuB,cAAXZ,EAAyBU,EAAYpB,QAAmB,aAAXU,EAAwBD,EAAKQ,EAAIE,GAASV,GAQzG,OAPkBW,IAAcE,GAAaL,EAAGM,cAAc,IAAIlC,EAAY,UAC5EY,SAAS,EACTC,YAAY,EACZC,OAAQmB,OAGKL,EAAGO,aAAalB,EAAMN,QAAQS,IACtCQ,KDNX,SAA0BL,EAAKa,EAAWC,GACxC,GAAsB,oBAAXpC,OAAX,CAGAK,IAAMgC,EAAYrC,OAAOsB,GAAOtB,OAAOsB,QACpBe,EAAUF,KAAeE,EAAUF,GAAa,IAGjE5B,SAAS+B,iBAAiBH,EAAW,SAAUhC,GAC7C,IAAKoC,IAAIZ,EAAKxB,EAAMqC,OAAQb,EAAIA,EAAKA,EAAGc,cAClCd,EAAGL,IAAMc,EAAST,EAAIxB,KAE3B,ICFPuC,CAAS5B,EAAK,iBAAUa,GACtBV,EAAOU,EAA8B,SAA1BA,EAAGI,aAAaf"}