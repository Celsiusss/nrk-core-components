{"version":3,"file":"index.js","sources":["../../utils.js","../core-toggle.js"],"sourcesContent":["const IS_ANDROID = typeof window !== 'undefined' && /(android)/i.test(window.navigator.userAgent) // Bad, but needed\nconst FOCUSABLE = 'a,button,input,select,textarea,iframe,[tabindex],[contenteditable=\"true\"]'\n\n/**\n* assign\n* @param {Object} target The target object\n* @param {Object} sources The source object(s)\n* @return {Object} The target object\n*/\nexport function assign (target, ...sources) {\n  sources.filter(Boolean).forEach((source) => {\n    Object.keys(source).forEach((key) => (target[key] = source[key]))\n  })\n  return target\n}\n\n/**\n* addEvent\n* @param {String} uuid An unique ID of the event to bind - ensurnes single instance\n* @param {String} type The type of event to bind\n* @param {Function} handler The function to call on event\n*/\nexport function addEvent (uuid, type, handler) {\n  if (typeof window === 'undefined' || window[`${uuid}-${type}`]) return        // Ensure single instance\n  document.addEventListener(type, handler, window[`${uuid}-${type}`] = true)    // Use capture for old Firefox\n}\n\nexport function ariaExpand (master, open) {\n  const relatedTarget = ariaTarget(master)\n  const prevState = master.getAttribute('aria-expanded') === 'true'\n  const wantState = typeof open === 'boolean' ? open : (open === 'toggle' ? !prevState : prevState)\n  const canUpdate = prevState === wantState || dispatchEvent(master, 'toggle', {relatedTarget, isOpen: prevState})\n  const nextState = canUpdate ? wantState : prevState\n\n  relatedTarget[nextState ? 'removeAttribute' : 'setAttribute']('hidden', '')   // Toggle hidden attribute\n  master.setAttribute('aria-expanded', nextState)                               // Set expand always\n  return nextState\n}\n\nexport function ariaTarget (master, relationType, targetElement) {\n  const targetId = master.getAttribute('aria-controls') || master.getAttribute('aria-owns') || master.getAttribute('list')\n  const target = targetElement || document.getElementById(targetId) || master.nextElementSibling\n  const label = IS_ANDROID ? 'data' : 'aria'   // Andriod has a bug and reads only label instead of content\n\n  if (!target) throw new Error(`missing nextElementSibling on ${master.outerHTML}`)\n  if (relationType) {\n    master.setAttribute(`aria-${relationType}`, target.id = target.id || getUUID())\n    target.setAttribute(`${label}-labelledby`, master.id = master.id || getUUID())\n  }\n  return target\n}\n\n/**\n* CustomEvent\n* See {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n* @param {String} eventName A case-sensitive string representing the event type to create\n* @param {Object} params.detail Any data passed when initializing the event\n* @param {Boolean} params.cancelable A Boolean indicating whether the event is cancelable.\n* @param {Boolean} params.bubbles A Boolean indicating whether the event bubbles up through the DOM or not.\n* @return {CustomEvent} Creates a CustomEvent.\n*/\nexport const CustomEvent = (() => {\n  if (typeof window === 'undefined') return\n  if (typeof window.CustomEvent === 'function') return window.CustomEvent\n\n  function CustomEvent (name, params = {}) {\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(name, Boolean(params.bubbles), Boolean(params.cancelable), params.detail)\n    return event\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n  return CustomEvent\n})()\n\n/**\n* debounce\n* @param {Function} callback The function to debounce\n* @param {Number} ms The number of milliseconds to delay\n* @return {Function} The new debounced function\n*/\nexport function debounce (callback, ms) {\n  let timer\n  return function (...args) {\n    const self = this\n    clearTimeout(timer)\n    timer = setTimeout(() => callback.apply(self, args), ms)\n  }\n}\n\n/**\n* dispatchEvent\n* @param {Element} elem The target object\n* @param {String} name The source object(s)\n* @param {Object} detail Detail object (bubbles and cancelable defaults to true)\n* @return {Boolean} Whether the event was cance\n*/\nexport function dispatchEvent (elem, name, detail = {}) {\n  return elem.dispatchEvent(new CustomEvent(name, {\n    bubbles: true,\n    cancelable: true,\n    detail\n  }))\n}\n\n/**\n* getUUID\n* @return {String} A generated unique ID\n*/\nexport function getUUID (el, attr) {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2, 5)\n}\n\n/**\n* isVisible\n* @param {Element} el A element to check visibility on\n* @return {Boolean} True of false based on visibility\n*/\nexport function isVisible (el) {\n  return el.offsetWidth && el.offsetHeight && window.getComputedStyle(el).getPropertyValue('visibility') !== 'hidden'\n}\n\n/**\n* queryAll\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @return {Array} Array of elements\n*/\nexport function queryAll (elements, context = document) {\n  if (elements === ':focusable') return queryAll(FOCUSABLE, context).filter((el) => !el.disabled && isVisible(el))\n  if (typeof elements === 'string') return queryAll(context.querySelectorAll(elements))\n  if (elements.length) return [].slice.call(elements)\n  return elements.nodeType ? [elements] : []\n}\n","import {name, version} from './package.json'\nimport {addEvent, ariaExpand, ariaTarget, queryAll} from '../utils'\n\nconst UUID = `data-${name}-${version}`.replace(/\\W+/g, '-')         // Strip invalid attribute characters\nconst OPEN = 'aria-expanded'\nconst POPS = 'aria-haspopup'\n\nconst isBool = (val) => typeof val === 'boolean'\n\nexport default function toggle (selector, open) {\n  const options = typeof open === 'object' ? open : {open}\n  const buttons = queryAll(selector)\n\n  buttons.forEach((button) => {\n    const open = isBool(options.open) ? options.open : button.getAttribute(OPEN) === 'true'\n    const pops = isBool(options.popup) ? options.popup : button.getAttribute(POPS) === 'true'\n\n    button.setAttribute(UUID, '')\n    button.setAttribute(POPS, pops)\n\n    ariaTarget(button, 'controls')\n    ariaExpand(button, open)\n  })\n\n  return buttons\n}\n\naddEvent(UUID, 'click', ({target}) => {\n  queryAll(`[${UUID}]`).forEach((el) => {\n    const open = el.getAttribute(OPEN) === 'true'\n    const pops = el.getAttribute(POPS) === 'true'\n\n    if (el.contains(target)) toggle(el, !open)                  // Click on toggle\n    else if (pops) toggle(el, ariaTarget(el).contains(target))  // Click in target or outside\n  })\n})\n"],"names":["IS_ANDROID","window","test","navigator","userAgent","FOCUSABLE","addEvent","uuid","type","handler","document","addEventListener","ariaExpand","master","open","const","relatedTarget","ariaTarget","prevState","getAttribute","wantState","nextState","dispatchEvent","isOpen","setAttribute","relationType","targetElement","targetId","target","getElementById","nextElementSibling","label","Error","id","getUUID","CustomEvent","prototype","Event","name","params","event","createEvent","initCustomEvent","Boolean","bubbles","cancelable","detail","elem","el","attr","Date","now","toString","Math","random","slice","isVisible","offsetWidth","offsetHeight","getComputedStyle","getPropertyValue","queryAll","elements","context","filter","disabled","querySelectorAll","length","call","nodeType","UUID","version","replace","OPEN","POPS","isBool","val","toggle","selector","options","buttons","forEach","button","pops","popup","ref","contains"],"mappings":"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"}