{"version":3,"file":"index.js","sources":["../../utils.js","../core-toggle.js","../core-toggle.jsx"],"sourcesContent":["/**\n* addElements\n* @param {String} key\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @return {Array} Array of elements\n*/\nexport function registerElements (key, elements) {\n  if (typeof elements === 'string') return registerElements(key, document.querySelectorAll(elements))\n  if (elements.length) return [].map.call(elements, (el) => (el[key] = 1) && el)\n  if (elements.nodeType) return (elements[key] = 1) && [elements]\n  return []\n}\n\nexport function getUUID (el, attr) {\n  const key = 'core-components-uuid'\n  const uuid = window[key] = (window[key] || 0) + 1\n  return `${key}-${uuid}`\n}\n\nexport function ariaConnect (master, slave = master.nextElementSibling, relation = 'controls') {\n  master.setAttribute(`aria-${relation}`, slave.id = slave.id || getUUID())\n  slave.setAttribute('aria-labelledby', master.id = master.id || getUUID())\n  return slave\n}\n\n/**\n* addEvent\n* @param {String} key A namespace to ensure no double binding and only triggering on registered elements\n* @param {String} eventName A case-sensitive string representing the event type to listen for\n* @param {Function} listener The function which receives a notification\n*/\nexport function registerEvent (key, eventName, listener) {\n  if (typeof window === 'undefined') return\n\n  // Store on window to make sure multiple instances is merged\n  const namespace = window[key] = window[key] || {}\n  const isUnbound = !namespace[eventName] && (namespace[eventName] = 1)\n\n  if (isUnbound) {\n    document.addEventListener(eventName, function (event) {\n      for (let el = event.target; el; el = el.parentElement) {\n        if (el[key]) listener(el, event)\n      }\n    }, true) // Use capture to make sure focus/blur bubbles in old Firefox\n  }\n}\n\n/**\n* assign\n* @param {Object} target The target object\n* @param {Object} sources The source object(s)\n* @return {Object} The target object\n*/\nexport function assign (target, ...sources) {\n  sources.filter(Boolean).forEach((source) => {\n    Object.keys(source).forEach((key) => (target[key] = source[key]))\n  })\n  return target\n}\n\n/**\n* CustomEvent\n* See {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n* @param {String} eventName A case-sensitive string representing the event type to create\n* @param {Object} params.detail Any data passed when initializing the event\n* @param {Boolean} params.cancelable A Boolean indicating whether the event is cancelable.\n* @param {Boolean} params.bubbles A Boolean indicating whether the event bubbles up through the DOM or not.\n* @return {CustomEvent} Creates a CustomEvent.\n*/\nexport const CustomEvent = (() => {\n  if (typeof window === 'undefined') return\n  if (typeof window.CustomEvent === 'function') return window.CustomEvent\n\n  function CustomEvent (name, params = {}) {\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(name, Boolean(params.bubbles), Boolean(params.cancelable), params.detail)\n    return event\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n  return CustomEvent\n})()\n\n/**\n* dispatchEvent\n* @param {Element} elem The target object\n* @param {String} name The source object(s)\n* @param {Object} detail Detail object (bubbles and cancelable defaults to true)\n* @return {Boolean} Whether the event was cance\n*/\nexport function dispatchEvent (elem, name, detail = {}) {\n  return elem.dispatchEvent(new CustomEvent(name, {detail, bubbles: true, cancelable: true}))\n}\n\n/**\n* debounce\n* @param {Function} callback The function to debounce\n* @param {Number} ms The number of milliseconds to delay\n* @return {Function} The new debounced function\n*/\nexport function debounce (callback, ms) {\n  let timer\n  return function (...args) {\n    const self = this\n    clearTimeout(timer)\n    timer = setTimeout(() => callback.apply(self, args), ms)\n  }\n}\n\n/**\n* escapeHTML\n* @param {String} str A string with potential html tokens\n* @return {String} Escaped HTML string according to OWASP recommendation\n*/\nconst ESCAPE_HTML_MAP = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '/': '&#x2F;', '\\'': '&#x27;'}\nexport function escapeHTML (str) {\n  return String(str || '').replace(/[&<>\"'/]/g, (char) => ESCAPE_HTML_MAP[char])\n}\n","// import {name, version} from './package.json'\nimport {ariaConnect, dispatchEvent, registerElements, registerEvent} from '../utils'\n\nconst KEY = 'core-toggle' //`${name}-${version}` // Unique id of component\n\nfunction ariaExpanded (master, slave, expanded) {\n  master.setAttribute('aria-expanded', expanded)\n  slave[expanded? 'removeAttribute' : 'setAttribute']('hidden', '')\n}\n\n/**\n* toggle\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @param {Boolean} [open] Optional. True will open, false will close, undefined just updates attribute\n* @return {Array} Array of elements\n*/\nexport default function toggle (elements, open = null) {\n  return registerElements(KEY, elements).map((el) => {\n    const slave = ariaConnect(el)\n    const prevOpen = el.getAttribute('aria-expanded') === 'true'\n    const wantOpen = open === null ? prevOpen : Boolean(open)\n    ariaExpanded(el, slave, prevOpen)\n\n    const nextOpen = (prevOpen !== wantOpen && dispatchEvent(el, 'toggle')) ? wantOpen : prevOpen\n\n    ariaExpanded(el, slave, nextOpen)\n    return el\n  })\n}\n\nregisterEvent(KEY, 'click', (el) => {\n  toggle(el, el.getAttribute('aria-expanded') !== 'true')\n})\n","import React from 'react'\nimport toggle from './core-toggle'\nimport {assign} from '../utils'\n\nexport default class Toggle extends React.PureComponent {\n  constructor (props) {\n    super(props)\n    this.getElement = this.getElement.bind(this)\n    this.toggle = this.toggle.bind(this)\n    this.state = {open: this.props.open}\n  }\n  getElement (element) {\n    this.element = element\n  }\n  toggle () {\n    this.setState((prevState) => {\n      const nextState = {open: !prevState.open}\n      const isUpdate = dispatchEvent(this.element, 'toggle', nextState)\n      return isUpdate? nextState : prevState\n    })\n  }\n  render () {\n    console.log('hei', this.props)\n    return React.createElement('button', assign({\n      'aria-expanded': this.state.open,\n      onClick: this.toggle,\n      ref: toggle\n    }, this.props))\n  }\n}\n"],"names":["getUUID","el","attr","const","key","window","CustomEvent","prototype","Event","name","params","event","document","createEvent","initCustomEvent","Boolean","bubbles","cancelable","detail","KEY","ariaExpanded","master","slave","expanded","setAttribute","toggle","elements","open","registerElements","querySelectorAll","length","map","call","nodeType","relation","nextElementSibling","id","ariaConnect","prevOpen","getAttribute","wantOpen","dispatchEvent","eventName","listener","namespace","addEventListener","let","target","parentElement","registerEvent","props","super","this","getElement","bind","state","element","setState","prevState","nextState","render","console","log","React","createElement","sources","filter","forEach","source","Object","keys","assign","aria-expanded","onClick","ref","PureComponent"],"mappings":"oNAaA,SAAgBA,EAASC,EAAIC,GAC3BC,IAAMC,EAAM,uBAEZ,OAAUA,OADGC,OAAOD,IAAQC,OAAOD,IAAQ,GAAK,gDAsDlD,IAAaE,EAAc,WACzB,GAAsB,oBAAXD,OACX,MAAkC,mBAAvBA,OAAOC,YAAmCD,OAAOC,aAQ5DA,EAAYC,UAAYF,OAAOG,MAAMD,UAC9BD,GAPP,SAASA,EAAaG,EAAMC,sBAC1BP,IAAMQ,EAAQC,SAASC,YAAY,eAEnC,OADAF,EAAMG,gBAAgBL,EAAMM,QAAQL,EAAOM,SAAUD,QAAQL,EAAOO,YAAaP,EAAOQ,QACjFP,GAPgB,GCpE3B,IAEMQ,EAAM,cAEZ,SAASC,EAAcC,EAAQC,EAAOC,GACpCF,EAAOG,aAAa,gBAAiBD,GACrCD,EAAMC,EAAU,kBAAoB,gBAAgB,SAAU,IAShE,SAAwBE,EAAQC,EAAUC,GACxC,sBAD+C,MDVjD,SAAgBC,EAAkBxB,EAAKsB,GACrC,MAAwB,iBAAbA,EAA8BE,EAAiBxB,EAAKQ,SAASiB,iBAAiBH,IACrFA,EAASI,UAAkBC,IAAIC,KAAKN,WAAWzB,UAAQA,EAAGG,GAAO,IAAMH,IACvEyB,EAASO,UAAkBP,EAAStB,GAAO,KAAOsB,MCQ/CE,CAAiBT,EAAKO,GAAUK,aAAK9B,GAC1CE,IDwEiCM,EAAMS,ECxEjCI,EDCV,SAA6BD,EAAQC,EAAmCY,GAGtE,sBAH2Cb,EAAOc,mCAA+B,YACjFd,EAAOG,qBAAqBU,EAAYZ,EAAMc,GAAKd,EAAMc,IAAMpC,KAC/DsB,EAAME,aAAa,kBAAmBH,EAAOe,GAAKf,EAAOe,IAAMpC,KACxDsB,ECJSe,CAAYpC,GACpBqC,EAAgD,SAArCrC,EAAGsC,aAAa,iBAC3BC,EAAoB,OAATb,EAAgBW,EAAWvB,QAAQY,GAMpD,OALAP,EAAanB,EAAIqB,EAAOgB,GAIxBlB,EAAanB,EAAIqB,EAFCgB,IAAaE,IDmEE/B,ECnE4B,4BAAJR,EDoE/CwC,cAAc,IAAInC,EAAYG,UAAOS,EAAQF,SAAS,EAAMC,YAAY,MCpERuB,EAAWF,GAG9ErC,WDKX,SAA+BG,EAAKsC,EAAWC,GAC7C,GAAsB,oBAAXtC,OAAX,CAGAF,IAAMyC,EAAYvC,OAAOD,GAAOC,OAAOD,QACpBwC,EAAUF,KAAeE,EAAUF,GAAa,IAGjE9B,SAASiC,iBAAiBH,EAAW,SAAU/B,GAC7C,IAAKmC,IAAI7C,EAAKU,EAAMoC,OAAQ9C,EAAIA,EAAKA,EAAG+C,cAClC/C,EAAGG,IAAMuC,EAAS1C,EAAIU,KAE3B,ICbPsC,CAAc9B,EAAK,iBAAUlB,GAC3BwB,EAAOxB,EAAyC,SAArCA,EAAGsC,aAAa,gCC1B3B,WAAaW,GACXC,YAAMD,GACNE,KAAKC,WAAaD,KAAKC,WAAWC,KAAKF,MACvCA,KAAK3B,OAAS2B,KAAK3B,OAAO6B,KAAKF,MAC/BA,KAAKG,OAAS5B,KAAMyB,KAAKF,MAAMvB,gHAEjC0B,oBAAYG,GACVJ,KAAKI,QAAUA,eAEjB/B,6BACE2B,KAAKK,kBAAUC,GACbvD,IAAMwD,GAAahC,MAAO+B,EAAU/B,MAEpC,OADiBc,cAAcW,EAAKI,QAAS,SAAUG,GACtCA,EAAYD,iBAGjCE,kBAEE,OADAC,QAAQC,IAAI,MAAOV,KAAKF,OACjBa,EAAMC,cAAc,SF8B/B,SAAwBjB,iEAItB,OAHAkB,EAAQC,OAAOnD,SAASoD,iBAASC,GAC/BC,OAAOC,KAAKF,GAAQD,iBAAS/D,UAAS2C,EAAO3C,GAAOgE,EAAOhE,OAEtD2C,EElCgCwB,EACnCC,gBAAiBpB,KAAKG,MAAM5B,KAC5B8C,QAASrB,KAAK3B,OACdiD,IAAKjD,GACJ2B,KAAKF,YAvBwBa,EAAMY"}