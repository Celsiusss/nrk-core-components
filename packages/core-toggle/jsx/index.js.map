{"version":3,"file":"index.js","sources":["../../utils.js","../core-toggle.js","../core-toggle.jsx"],"sourcesContent":["/**\n* assign\n* @param {Object} target The target object\n* @param {Object} sources The source object(s)\n* @return {Object} The target object\n*/\nexport function assign (target, ...sources) {\n  sources.filter(Boolean).forEach((source) => {\n    Object.keys(source).forEach((key) => (target[key] = source[key]))\n  })\n  return target\n}\n\n/**\n* addEvent\n* @param {String} uuid An unique ID of the event to bind - ensurnes single instance\n* @param {String} type The type of event to bind\n* @param {Function} handler The function to call on event\n*/\nexport function addEvent (uuid, type, handler) {\n  if (typeof window === 'undefined' || window[`${uuid}-${type}`]) return        // Ensure single instance\n  document.addEventListener(type, handler, window[`${uuid}-${type}`] = true)    // Use capture for old Firefox\n}\n\nexport function ariaExpand (master, open) {\n  const relatedTarget = ariaTarget(master)\n  const prevState = master.getAttribute('aria-expanded') === 'true'\n  const wantState = typeof open === 'boolean' ? open : (open === 'toggle' ? !prevState : prevState)\n  const canUpdate = prevState === wantState || dispatchEvent(master, 'toggle', {relatedTarget, isOpen: prevState})\n  const nextState = canUpdate ? wantState : prevState\n\n  relatedTarget[nextState ? 'removeAttribute' : 'setAttribute']('hidden', '')   // Toggle hidden attribute\n  master.setAttribute('aria-expanded', nextState)                               // Set expand always\n  return nextState\n}\n\nexport function ariaTarget (master, relationType, targetElement) {\n  const targetId = master.getAttribute('aria-controls') || master.getAttribute('aria-owns') || master.getAttribute('list')\n  const target = targetElement || document.getElementById(targetId) || master.nextElementSibling\n\n  if (!target) throw new Error(`missing nextElementSibling on ${master.outerHTML}`)\n  if (relationType) master.setAttribute(`aria-${relationType}`, target.id = target.id || getUUID())\n  if (relationType) target.setAttribute(`aria-labelledby`, master.id = master.id || getUUID())\n  return target\n}\n\n/**\n* CustomEvent\n* See {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n* @param {String} eventName A case-sensitive string representing the event type to create\n* @param {Object} params.detail Any data passed when initializing the event\n* @param {Boolean} params.cancelable A Boolean indicating whether the event is cancelable.\n* @param {Boolean} params.bubbles A Boolean indicating whether the event bubbles up through the DOM or not.\n* @return {CustomEvent} Creates a CustomEvent.\n*/\nexport const CustomEvent = (() => {\n  if (typeof window === 'undefined') return\n  if (typeof window.CustomEvent === 'function') return window.CustomEvent\n\n  function CustomEvent (name, params = {}) {\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(name, Boolean(params.bubbles), Boolean(params.cancelable), params.detail)\n    return event\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n  return CustomEvent\n})()\n\n/**\n* debounce\n* @param {Function} callback The function to debounce\n* @param {Number} ms The number of milliseconds to delay\n* @return {Function} The new debounced function\n*/\nexport function debounce (callback, ms) {\n  let timer\n  return function (...args) {\n    const self = this\n    clearTimeout(timer)\n    timer = setTimeout(() => callback.apply(self, args), ms)\n  }\n}\n\n/**\n* dispatchEvent\n* @param {Element} elem The target object\n* @param {String} name The source object(s)\n* @param {Object} detail Detail object (bubbles and cancelable defaults to true)\n* @return {Boolean} Whether the event was cance\n*/\nexport function dispatchEvent (elem, name, detail = {}) {\n  return elem.dispatchEvent(new CustomEvent(name, {\n    bubbles: true,\n    cancelable: true,\n    detail\n  }))\n}\n\n/**\n* getUUID\n* @return {String} A generated unique ID\n*/\nexport function getUUID (el, attr) {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2, 5)\n}\n\n/**\n* isVisible\n* @param {Element} el A element to check visibility on\n* @return {Boolean} True of false based on visibility\n*/\nexport function isVisible (el) {\n  return el.offsetWidth && el.offsetHeight && window.getComputedStyle(el).getPropertyValue('visibility') !== 'hidden'\n}\n\n/**\n* queryAll\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @return {Array} Array of elements\n*/\nconst FOCUSABLE = 'a,button,input,select,textarea,iframe,[tabindex],[contenteditable=\"true\"]'\n\nexport function queryAll (elements, context = document) {\n  if (elements === ':focusable') return queryAll(FOCUSABLE, context).filter((el) => !el.disabled && isVisible(el))\n  if (typeof elements === 'string') return queryAll(context.querySelectorAll(elements))\n  if (elements.length) return [].slice.call(elements)\n  return elements.nodeType ? [elements] : []\n}\n","import {name, version} from './package.json'\nimport {addEvent, ariaExpand, ariaTarget, queryAll} from '../utils'\n\nconst UUID = `data-${name}-${version}`.replace(/\\W+/g, '-')         // Strip invalid attribute characters\nconst OPEN = 'aria-expanded'\nconst POPS = 'aria-haspopup'\n\nconst isBool = (val) => typeof val === 'boolean'\n\nexport default function toggle (selector, open) {\n  const options = typeof open === 'object' ? open : {open}\n  const buttons = queryAll(selector)\n\n  buttons.forEach((button) => {\n    const open = isBool(options.open) ? options.open : button.getAttribute(OPEN) === 'true'\n    const pops = isBool(options.popup) ? options.popup : button.getAttribute(POPS) === 'true'\n\n    button.setAttribute(UUID, '')\n    button.setAttribute(POPS, pops)\n\n    ariaTarget(button, 'controls')\n    ariaExpand(button, open)\n  })\n\n  return buttons\n}\n\naddEvent(UUID, 'click', ({target}) => {\n  queryAll(`[${UUID}]`).forEach((el) => {\n    const open = el.getAttribute(OPEN) === 'true'\n    const pops = el.getAttribute(POPS) === 'true'\n\n    if (el.contains(target)) toggle(el, !open)                  // Click on toggle\n    else if (pops) toggle(el, ariaTarget(el).contains(target))  // Click in target or outside\n  })\n})\n","import React from 'react'\nimport coreToggle from '../core-toggle/core-toggle'\nimport {ariaTarget, assign, dispatchEvent} from '../utils'\n\nfunction mountToggle (self) {\n  coreToggle(ReactDOM.findDOMNode(self).firstElementChild)      // Button must be first child\n}\n\nexport default class Toggle extends React.Component {\n  componentDidMount() { mountToggle(this) }                     // Mount client side only to avoid rerender\n  componentDidUpdate () { mountToggle(this) }                   // Must mount also on update in case content changes\n  render () {\n    return <div {...assign({}, this.props, {open: null, popup: null})}>\n      {React.Children.map(this.props.children, (child, i) => {  // Augment children with aria-attributes\n        return assign({}, child, {\n          props: assign({}, child.props, i ?\n            {'hidden': !this.props.open} :\n            {\n              'aria-expanded': String(Boolean(this.props.open)),\n              'aria-haspopup': String(Boolean(this.props.popup))\n            }\n          )\n        })\n      })}\n    </div>\n  }\n}\n"],"names":["assign","target","sources","filter","Boolean","forEach","source","Object","keys","key","ariaExpand","master","open","const","relatedTarget","ariaTarget","prevState","getAttribute","wantState","nextState","elem","name","detail","dispatchEvent","CustomEvent","bubbles","cancelable","isOpen","setAttribute","relationType","targetElement","targetId","document","getElementById","nextElementSibling","Error","id","getUUID","window","prototype","Event","params","event","createEvent","initCustomEvent","el","attr","Date","now","toString","Math","random","slice","FOCUSABLE","queryAll","elements","context","disabled","offsetWidth","offsetHeight","getComputedStyle","getPropertyValue","isVisible","querySelectorAll","length","call","nodeType","uuid","type","handler","UUID","replace","OPEN","POPS","isBool","val","toggle","selector","options","buttons","button","pops","popup","mountToggle","self","coreToggle","ReactDOM","findDOMNode","firstElementChild","ref","contains","addEventListener","componentDidMount","this","componentDidUpdate","render","React","props","Children","map","children","child","i","hidden","aria-expanded","String","aria-haspopup","Component"],"mappings":"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"}