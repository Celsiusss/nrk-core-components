{"version":3,"file":"core-datepicker.min.js","sources":["../utils.js","core-datepicker.js"],"sourcesContent":["const IS_ANDROID = typeof window !== 'undefined' && /(android)/i.test(window.navigator.userAgent) // Bad, but needed\nconst FOCUSABLE = 'a,button,input,select,textarea,iframe,[tabindex],[contenteditable=\"true\"]'\n\n/**\n* assign\n* @param {Object} target The target object\n* @param {Object} sources The source object(s)\n* @return {Object} The target object\n*/\nexport function assign (target, ...sources) {\n  sources.filter(Boolean).forEach((source) => {\n    Object.keys(source).forEach((key) => (target[key] = source[key]))\n  })\n  return target\n}\n\n/**\n* addEvent\n* @param {String} uuid An unique ID of the event to bind - ensurnes single instance\n* @param {String} type The type of event to bind\n* @param {Function} handler The function to call on event\n*/\nexport function addEvent (uuid, type, handler) {\n  if (typeof window === 'undefined' || window[`${uuid}-${type}`]) return        // Ensure single instance\n  document.addEventListener(type, handler, window[`${uuid}-${type}`] = true)    // Use capture for old Firefox\n}\n\nexport function ariaExpand (master, open) {\n  const relatedTarget = ariaTarget(master)\n  const prevState = master.getAttribute('aria-expanded') === 'true'\n  const wantState = typeof open === 'boolean' ? open : (open === 'toggle' ? !prevState : prevState)\n  const canUpdate = prevState === wantState || dispatchEvent(master, 'toggle', {relatedTarget, isOpen: prevState})\n  const nextState = canUpdate ? wantState : prevState\n\n  relatedTarget[nextState ? 'removeAttribute' : 'setAttribute']('hidden', '')   // Toggle hidden attribute\n  master.setAttribute('aria-expanded', nextState)                               // Set expand always\n  return nextState\n}\n\nexport function ariaTarget (master, relationType, targetElement) {\n  const targetId = master.getAttribute('aria-controls') || master.getAttribute('aria-owns') || master.getAttribute('list')\n  const target = targetElement || document.getElementById(targetId) || master.nextElementSibling\n  const label = IS_ANDROID ? 'data' : 'aria'   // Andriod has a bug and reads only label instead of content\n\n  if (!target) throw new Error(`missing nextElementSibling on ${master.outerHTML}`)\n  if (relationType) {\n    master.setAttribute(`aria-${relationType}`, target.id = target.id || getUUID())\n    target.setAttribute(`${label}-labelledby`, master.id = master.id || getUUID())\n  }\n  return target\n}\n\n/**\n* CustomEvent\n* See {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n* @param {String} eventName A case-sensitive string representing the event type to create\n* @param {Object} params.detail Any data passed when initializing the event\n* @param {Boolean} params.cancelable A Boolean indicating whether the event is cancelable.\n* @param {Boolean} params.bubbles A Boolean indicating whether the event bubbles up through the DOM or not.\n* @return {CustomEvent} Creates a CustomEvent.\n*/\nexport const CustomEvent = (() => {\n  if (typeof window === 'undefined') return\n  if (typeof window.CustomEvent === 'function') return window.CustomEvent\n\n  function CustomEvent (name, params = {}) {\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(name, Boolean(params.bubbles), Boolean(params.cancelable), params.detail)\n    return event\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n  return CustomEvent\n})()\n\n/**\n* debounce\n* @param {Function} callback The function to debounce\n* @param {Number} ms The number of milliseconds to delay\n* @return {Function} The new debounced function\n*/\nexport function debounce (callback, ms) {\n  let timer\n  return function (...args) {\n    const self = this\n    clearTimeout(timer)\n    timer = setTimeout(() => callback.apply(self, args), ms)\n  }\n}\n\n/**\n* dispatchEvent\n* @param {Element} elem The target object\n* @param {String} name The source object(s)\n* @param {Object} detail Detail object (bubbles and cancelable defaults to true)\n* @return {Boolean} Whether the event was cance\n*/\nexport function dispatchEvent (elem, name, detail = {}) {\n  return elem.dispatchEvent(new CustomEvent(name, {\n    bubbles: true,\n    cancelable: true,\n    detail\n  }))\n}\n\n/**\n* getUUID\n* @return {String} A generated unique ID\n*/\nexport function getUUID (el, attr) {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2, 5)\n}\n\n/**\n* isVisible\n* @param {Element} el A element to check visibility on\n* @return {Boolean} True of false based on visibility\n*/\nexport function isVisible (el) {\n  return el.offsetWidth && el.offsetHeight && window.getComputedStyle(el).getPropertyValue('visibility') !== 'hidden'\n}\n\n/**\n* queryAll\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @return {Array} Array of elements\n*/\nexport function queryAll (elements, context = document) {\n  if (elements === ':focusable') return queryAll(FOCUSABLE, context).filter((el) => !el.disabled && isVisible(el))\n  if (typeof elements === 'string') return queryAll(context.querySelectorAll(elements))\n  if (elements.length) return [].slice.call(elements)\n  return elements.nodeType ? [elements] : []\n}\n","// import {name, version} from './package.json'\nimport {queryAll, addEvent} from '../utils'\n\nconst KEY = 'core-datepicker' //`${name}-${version}`                    // Unique id of component\n\nexport default function datepicker (...args) {              // Expose component\n  return new Datepicker(...args)\n}\n\nclass Datepicker {\n  constructor (elements) {\n    this.elements = queryAll(elements, KEY)\n    // tabindex=\"0\" på datepicker kun lytte til events på disse\n  }\n  open (open = true) {}\n  close (open = false) {}\n}\n\n\n/* <table>\n  <caption></caption>\n  <thead></thead>\n  <tbody></tbody>\n  <tfoot></tfoot>\n</table> */\n"],"names":["window","test","navigator","userAgent","const","FOCUSABLE","CustomEvent","prototype","Event","name","params","event","document","createEvent","initCustomEvent","Boolean","bubbles","cancelable","detail","queryAll","elements","context","filter","el","disabled","offsetWidth","offsetHeight","getComputedStyle","getPropertyValue","isVisible","querySelectorAll","length","slice","call","nodeType","Datepicker","this","open","close","args"],"mappings":"0LAAqC,oBAAXA,QAA0B,aAAaC,KAAKD,OAAOE,UAAUC,WAAvFC,IACMC,EAAY,6EA4DS,WACzB,GAAsB,oBAAXL,OACX,MAAkC,mBAAvBA,OAAOM,YAAmCN,OAAOM,aAQ5DA,EAAYC,UAAYP,OAAOQ,MAAMD,UAC9BD,GAPP,SAASA,EAAaG,EAAMC,sBAC1BN,IAAMO,EAAQC,SAASC,YAAY,eAEnC,OADAF,EAAMG,gBAAgBL,EAAMM,QAAQL,EAAOM,SAAUD,QAAQL,EAAOO,YAAaP,EAAOQ,QACjFP,GAPgB,GAkE3B,SAAgBQ,EAAUC,EAAUC,GAClC,sBAD4CT,UAC3B,eAAbQ,EAAkCD,EAASd,EAAWgB,GAASC,gBAAQC,UAAQA,EAAGC,UAVxF,SAA2BD,GACzB,OAAOA,EAAGE,aAAeF,EAAGG,cAA+E,WAA/D1B,OAAO2B,iBAAiBJ,GAAIK,iBAAiB,cASSC,CAAUN,KACpF,iBAAbH,EAA8BD,EAASE,EAAQS,iBAAiBV,IACvEA,EAASW,UAAkBC,MAAMC,KAAKb,GACnCA,EAASc,UAAYd,MC1H9B,IAAMe,EACJ,SAAaf,GACbgB,KAAOhB,SAAWD,EAASC,EARjB,2BAWZe,YAAEE,cAAMA,mBAAO,IACfF,YAAEG,eAAOD,mBAAO,IAVhB,kEACE,OAAO,kCAAIF,gBAAcI"}