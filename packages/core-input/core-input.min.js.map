{"version":3,"file":"core-input.min.js","sources":["../utils.js","core-input.js"],"sourcesContent":["const IS_ANDROID = typeof window !== 'undefined' && /(android)/i.test(window.navigator.userAgent) // Bad, but needed\nconst FOCUSABLE = 'a,button,input,select,textarea,iframe,[tabindex],[contenteditable=\"true\"]'\n\n/**\n* assign\n* @param {Object} target The target object\n* @param {Object} sources The source object(s)\n* @return {Object} The target object\n*/\nexport function assign (target, ...sources) {\n  sources.filter(Boolean).forEach((source) => {\n    Object.keys(source).forEach((key) => (target[key] = source[key]))\n  })\n  return target\n}\n\n/**\n* addEvent\n* @param {String} uuid An unique ID of the event to bind - ensurnes single instance\n* @param {String} type The type of event to bind\n* @param {Function} handler The function to call on event\n*/\nexport function addEvent (uuid, type, handler) {\n  if (typeof window === 'undefined' || window[`${uuid}-${type}`]) return        // Ensure single instance\n  document.addEventListener(type, handler, window[`${uuid}-${type}`] = true)    // Use capture for old Firefox\n}\n\nexport function ariaExpand (master, open) {\n  const relatedTarget = ariaTarget(master)\n  const prevState = master.getAttribute('aria-expanded') === 'true'\n  const wantState = typeof open === 'boolean' ? open : (open === 'toggle' ? !prevState : prevState)\n  const canUpdate = prevState === wantState || dispatchEvent(master, 'toggle', {relatedTarget, isOpen: prevState})\n  const nextState = canUpdate ? wantState : prevState\n\n  relatedTarget[nextState ? 'removeAttribute' : 'setAttribute']('hidden', '')   // Toggle hidden attribute\n  master.setAttribute('aria-expanded', nextState)                               // Set expand always\n  return nextState\n}\n\nexport function ariaTarget (master, relationType, targetElement) {\n  const targetId = master.getAttribute('aria-controls') || master.getAttribute('aria-owns') || master.getAttribute('list')\n  const target = targetElement || document.getElementById(targetId) || master.nextElementSibling\n  const label = IS_ANDROID ? 'data' : 'aria'   // Andriod has a bug and reads only label instead of content\n\n  if (!target) throw new Error(`missing nextElementSibling on ${master.outerHTML}`)\n  if (relationType) {\n    master.setAttribute(`aria-${relationType}`, target.id = target.id || getUUID())\n    target.setAttribute(`${label}-labelledby`, master.id = master.id || getUUID())\n  }\n  return target\n}\n\n/**\n* CustomEvent\n* See {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n* @param {String} eventName A case-sensitive string representing the event type to create\n* @param {Object} params.detail Any data passed when initializing the event\n* @param {Boolean} params.cancelable A Boolean indicating whether the event is cancelable.\n* @param {Boolean} params.bubbles A Boolean indicating whether the event bubbles up through the DOM or not.\n* @return {CustomEvent} Creates a CustomEvent.\n*/\nexport const CustomEvent = (() => {\n  if (typeof window === 'undefined') return\n  if (typeof window.CustomEvent === 'function') return window.CustomEvent\n\n  function CustomEvent (name, params = {}) {\n    const event = document.createEvent('CustomEvent')\n    event.initCustomEvent(name, Boolean(params.bubbles), Boolean(params.cancelable), params.detail)\n    return event\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n  return CustomEvent\n})()\n\n/**\n* debounce\n* @param {Function} callback The function to debounce\n* @param {Number} ms The number of milliseconds to delay\n* @return {Function} The new debounced function\n*/\nexport function debounce (callback, ms) {\n  let timer\n  return function (...args) {\n    const self = this\n    clearTimeout(timer)\n    timer = setTimeout(() => callback.apply(self, args), ms)\n  }\n}\n\n/**\n* dispatchEvent\n* @param {Element} elem The target object\n* @param {String} name The source object(s)\n* @param {Object} detail Detail object (bubbles and cancelable defaults to true)\n* @return {Boolean} Whether the event was cance\n*/\nexport function dispatchEvent (elem, name, detail = {}) {\n  return elem.dispatchEvent(new CustomEvent(name, {\n    bubbles: true,\n    cancelable: true,\n    detail\n  }))\n}\n\n/**\n* getUUID\n* @return {String} A generated unique ID\n*/\nexport function getUUID (el, attr) {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2, 5)\n}\n\n/**\n* isVisible\n* @param {Element} el A element to check visibility on\n* @return {Boolean} True of false based on visibility\n*/\nexport function isVisible (el) {\n  return el.offsetWidth && el.offsetHeight && window.getComputedStyle(el).getPropertyValue('visibility') !== 'hidden'\n}\n\n/**\n* queryAll\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @return {Array} Array of elements\n*/\nexport function queryAll (elements, context = document) {\n  if (elements === ':focusable') return queryAll(FOCUSABLE, context).filter((el) => !el.disabled && isVisible(el))\n  if (typeof elements === 'string') return queryAll(context.querySelectorAll(elements))\n  if (elements.length) return [].slice.call(elements)\n  return elements.nodeType ? [elements] : []\n}\n","import {name, version} from './package.json'\nimport {addEvent, ariaExpand, ariaTarget, queryAll} from '../utils'\n\nconst UUID = `data-${name}-${version}`.replace(/\\W+/g, '-')         // Strip invalid attribute characters\nconst KEYS = {ENTER: 13, SHIFT: 16, ESC: 27, PAGEUP: 33, PAGEDOWN: 34, END: 35, HOME: 36, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40}\n\nexport default function input (elements, options = {}) {\n  return queryAll(elements).map((input) => {\n    const listbox = ariaTarget(input, 'owns')\n    const mode = options.mode || input.getAttribute('aria-autocomplete') || 'list' // both = suggest, list = hits\n\n    input.setAttribute(UUID, '')\n    input.setAttribute('role', 'combobox')\n    input.setAttribute('autocomplete', false)\n    input.setAttribute('aria-autocomplete', mode)\n    listbox.setAttribute('role', 'listbox')\n    ariaExpand(input, options.open)\n  })\n}\n\naddEvent(UUID, 'click', onShow)\naddEvent(UUID, 'focus', onShow)\n// addEvent(UUID, 'input', console.log)\naddEvent(UUID, 'keydown', (event) => {\n  if (event.ctrlKey || event.altKey || event.metaKey) return                    // Let browser do it's thing\n  // const control = ariaControl(event.target) || event.target\n  // if (control.hasAttribute(UUID)) return onKey(event, control)\n})\n\nfunction ariaList (control) {\n  const target = ariaTarget(control)\n  queryAll('li', target).forEach((el) => el.setAttribute('role', 'none'))\n  return queryAll(':focusable', target).map((el) => {\n    // el.setAttribute('role', 'presentation')\n    // el.setAttribute('type', 'button')\n    el.setAttribute('tabindex', '-1')\n    return el\n  })\n}\n\nfunction onShow (event) {\n  queryAll(`[${UUID}]`).forEach((control) => {\n    const target = ariaTarget(control)\n    if (event.type === 'click') {\n      queryAll(':focusable', target).forEach((item) => {\n        if (item.contains(event.target)) {\n          control.focus()\n          control.value = item.value || item.textContent\n          return ariaExpand(control, false)\n        }\n      })\n    }\n    ariaExpand(control, control.contains(event.target) || target.contains(event.target))\n  })\n}\n\nfunction onKey (event, control) {\n  const focus = ariaList(control)\n  const index = focus.indexOf(document.activeElement)\n  let moveTo\n\n  if (event.keyCode === KEYS.ESC) moveTo = control\n  else if (event.keyCode === KEYS.UP) moveTo = focus[index - 1] || focus.pop()\n  else if (event.keyCode === KEYS.DOWN) moveTo = focus[index + 1] || focus[0]\n  else if (event.keyCode === KEYS.HOME || event.keyCode === KEYS.PAGEUP) moveTo = focus[0]\n  else if (event.keyCode === KEYS.END || event.keyCode === KEYS.PAGEDOWN) moveTo = focus.pop()\n  else if (event.keyCode !== KEYS.SHIFT && event.keyCode !== KEYS.ENTER) control.focus()\n\n  if (moveTo) {\n    event.preventDefault()\n    moveTo.focus()\n    ariaExpand(control, moveTo !== control)\n  }\n}\n"],"names":["IS_ANDROID","window","test","navigator","userAgent","FOCUSABLE","addEvent","uuid","type","handler","document","addEventListener","ariaExpand","master","open","const","relatedTarget","ariaTarget","prevState","getAttribute","wantState","nextState","elem","name","detail","dispatchEvent","CustomEvent","bubbles","cancelable","isOpen","setAttribute","relationType","targetElement","targetId","target","getElementById","nextElementSibling","label","Error","id","getUUID","prototype","Event","params","event","createEvent","initCustomEvent","Boolean","el","attr","Date","now","toString","Math","random","slice","queryAll","elements","context","filter","disabled","offsetWidth","offsetHeight","getComputedStyle","getPropertyValue","isVisible","querySelectorAll","length","call","nodeType","UUID","replace","onShow","forEach","control","item","contains","focus","value","textContent","ctrlKey","altKey","metaKey","options","map","input","listbox","mode"],"mappings":"yLAAMA,EAA+B,oBAAXC,QAA0B,aAAaC,KAAKD,OAAOE,UAAUC,WACjFC,EAAY,4EAqBlB,SAAgBC,EAAUC,EAAMC,EAAMC,GACd,oBAAXR,QAA0BA,OAAUM,MAAQC,IACvDE,SAASC,iBAAiBH,EAAMC,EAASR,OAAUM,MAAQC,IAAU,GAGvE,SAAgBI,EAAYC,EAAQC,GAClCC,IAAMC,EAAgBC,EAAWJ,GAC3BK,EAAqD,SAAzCL,EAAOM,aAAa,iBAChCC,EAA4B,kBAATN,EAAqBA,EAAiB,WAATA,GAAqBI,EAAYA,EAEjFG,EADYH,IAAcE,GAkElC,SAA+BE,EAAMC,EAAMC,sBACzC,OAAOF,EAAKG,cAAc,IAAIC,EAAYH,GACxCI,SAAS,EACTC,YAAY,SACZJ,KAtE2CC,CAAcZ,EAAQ,wBAAWG,EAAea,OAAQX,IACvEE,EAAYF,EAI1C,OAFAF,EAAcK,EAAY,kBAAoB,gBAAgB,SAAU,IACxER,EAAOiB,aAAa,gBAAiBT,GAC9BA,EAGT,SAAgBJ,EAAYJ,EAAQkB,EAAcC,GAChDjB,IAAMkB,EAAWpB,EAAOM,aAAa,kBAAoBN,EAAOM,aAAa,cAAgBN,EAAOM,aAAa,QAC3Ge,EAASF,GAAiBtB,SAASyB,eAAeF,IAAapB,EAAOuB,mBACtEC,EAAQrC,EAAa,OAAS,OAEpC,IAAKkC,EAAQ,MAAM,IAAII,uCAAuCzB,EAAgB,WAK9E,OAJIkB,IACFlB,EAAOiB,qBAAqBC,EAAgBG,EAAOK,GAAKL,EAAOK,IAAMC,KACrEN,EAAOJ,aAAgBO,gBAAoBxB,EAAO0B,GAAK1B,EAAO0B,IAAMC,MAE/DN,EAYT,IAAaR,EAAc,WACzB,GAAsB,oBAAXzB,OACX,MAAkC,mBAAvBA,OAAOyB,YAAmCzB,OAAOyB,aAQ5DA,EAAYe,UAAYxC,OAAOyC,MAAMD,UAC9Bf,GAPP,SAASA,EAAaH,EAAMoB,sBAC1B5B,IAAM6B,EAAQlC,SAASmC,YAAY,eAEnC,OADAD,EAAME,gBAAgBvB,EAAMwB,QAAQJ,EAAOhB,SAAUoB,QAAQJ,EAAOf,YAAae,EAAOnB,QACjFoB,GAPgB,GAgD3B,SAAgBJ,EAASQ,EAAIC,GAC3B,OAAOC,KAAKC,MAAMC,SAAS,IAAMC,KAAKC,SAASF,SAAS,IAAIG,MAAM,EAAG,GAiBvE,SAAgBC,EAAUC,EAAUC,GAClC,sBAD4ChD,UAC3B,eAAb+C,EAAkCD,EAASnD,EAAWqD,GAASC,gBAAQX,UAAQA,EAAGY,UAVxF,SAA2BZ,GACzB,OAAOA,EAAGa,aAAeb,EAAGc,cAA+E,WAA/D7D,OAAO8D,iBAAiBf,GAAIgB,iBAAiB,cASSC,CAAUjB,KACpF,iBAAbS,EAA8BD,EAASE,EAAQQ,iBAAiBT,IACvEA,EAASU,UAAkBZ,MAAMa,KAAKX,GACnCA,EAASY,UAAYZ,MChI9B1C,IAAMuD,EAAO,6BAA0BC,QAAQ,OAAQ,KA0BvD,SAWSC,EAAQ5B,GACfY,MAAac,OAASG,iBAASC,GAC7B3D,IAAMmB,EAASjB,EAAWyD,GACP,UAAf9B,EAAMpC,MACRgD,EAAS,aAActB,GAAQuC,iBAASE,GACtC,GAAIA,EAAKC,SAAShC,EAAMV,QAGtB,OAFAwC,EAAQG,QACRH,EAAQI,MAAQH,EAAKG,OAASH,EAAKI,YAC5BnE,EAAW8D,GAAS,KAIjC9D,EAAW8D,EAASA,EAAQE,SAAShC,EAAMV,SAAWA,EAAO0C,SAAShC,EAAMV,kBAhChF5B,EAASgE,EAAM,QAASE,GACxBlE,EAASgE,EAAM,QAASE,GAExBlE,EAASgE,EAAM,mBAAY1B,GACrBA,EAAMoC,SAAWpC,EAAMqC,QAAUrC,EAAMsC,UApB7CnE,SAE+B0C,EAAU0B,GACvC,0BAAO3B,EAASC,GAAU2B,aAAKC,GAC7BtE,IAAMuE,EAAUrE,EAAWoE,EAAO,QAC5BE,EAAOJ,EAAQI,MAAQF,EAAMlE,aAAa,sBAAwB,OAExEkE,EAAMvD,aAAawC,EAAM,IACzBe,EAAMvD,aAAa,OAAQ,YAC3BuD,EAAMvD,aAAa,gBAAgB,GACnCuD,EAAMvD,aAAa,oBAAqByD,GACxCD,EAAQxD,aAAa,OAAQ,WAC7BlB,EAAWyE,EAAOF,EAAQrE"}